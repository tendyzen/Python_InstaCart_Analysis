{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8efc11f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ca3d54ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "accb0909",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code 3 different ways of reaching a result of 100 by adding or subtracting numeric variables.\n",
    "a = 97\n",
    "b = 3\n",
    "c = 197"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "50591cb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a + b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "449ddc05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c - a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f419f00b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(c + b) - (a + b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8bf2a5d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code 2 floating-point variables and divide them by each other.\n",
    "blue = 9.99999\n",
    "red = 3.141592653"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c62d8374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.18"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(blue / red, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1193405b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Construct a short word made of separate strings (youâ€™ll need to concatenate some strings!).\n",
    "t = 'Fra'\n",
    "i = 'nken'\n",
    "m = 'ste'\n",
    "e = 'in'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0566592c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Frankenstein'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t + i + m + e"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0f62ca93",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Construct 2 short sentences made of separate strings.\n",
    "z = t + i + m + e\n",
    "y = ' went to '\n",
    "x = 'the store.'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "313dc490",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Frankenstein went to the store.\n"
     ]
    }
   ],
   "source": [
    "print(z+y+x)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
